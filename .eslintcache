[{"C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\index.js":"1","C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\App.js":"2","C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\components\\Intro.js":"3","C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\components\\Other.js":"4","C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\components\\Seek.js":"5","C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\components\\How.js":"6","C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\Api.js":"7","C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\components\\Register.js":"8","C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\provider\\authProvider.js":"9","C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\firebase\\authMethods.js":"10","C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\firebase\\firebaseIndex.js":"11","C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\components\\Login.js":"12","C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\components\\PrivateRoute.js":"13","C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\components\\ingredients\\SingleVege.js":"14","C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\components\\ingredients\\SinglePasta.js":"15","C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\components\\ingredients\\Vegetables.js":"16","C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\components\\ingredients\\Pasta.js":"17","C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\components\\ingredients\\Various.js":"18","C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\components\\ingredients\\SingleVarious.js":"19","C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\components\\ingredients\\Recipes.js":"20","C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\components\\ingredients\\SingleRecipe.js":"21","C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\components\\ingredients\\Groats.js":"22","C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\components\\ingredients\\SingleGroat.js":"23","C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\components\\ingredients\\RecipesAll.js":"24","C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\components\\ingredients\\Sauces.js":"25","C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\components\\NavBar\\index.jsx":"26"},{"size":389,"mtime":1609673674310,"results":"27","hashOfConfig":"28"},{"size":3180,"mtime":1613238707586,"results":"29","hashOfConfig":"28"},{"size":168,"mtime":1613422247326,"results":"30","hashOfConfig":"28"},{"size":142,"mtime":1608941009803,"results":"31","hashOfConfig":"28"},{"size":13392,"mtime":1613597013797,"results":"32","hashOfConfig":"28"},{"size":2527,"mtime":1613759195348,"results":"33","hashOfConfig":"28"},{"size":1429,"mtime":1612221424478,"results":"34","hashOfConfig":"28"},{"size":2479,"mtime":1613275729534,"results":"35","hashOfConfig":"28"},{"size":1200,"mtime":1613061477588,"results":"36","hashOfConfig":"28"},{"size":1161,"mtime":1613061502857,"results":"37","hashOfConfig":"28"},{"size":495,"mtime":1610790298749,"results":"38","hashOfConfig":"28"},{"size":3266,"mtime":1613275729486,"results":"39","hashOfConfig":"28"},{"size":516,"mtime":1609934982412,"results":"40","hashOfConfig":"28"},{"size":3544,"mtime":1613779003888,"results":"41","hashOfConfig":"28"},{"size":4634,"mtime":1613759769100,"results":"42","hashOfConfig":"28"},{"size":1437,"mtime":1613430586515,"results":"43","hashOfConfig":"28"},{"size":1307,"mtime":1613430552452,"results":"44","hashOfConfig":"28"},{"size":1317,"mtime":1613430520392,"results":"45","hashOfConfig":"28"},{"size":3654,"mtime":1613759803586,"results":"46","hashOfConfig":"28"},{"size":453,"mtime":1611616497396,"results":"47","hashOfConfig":"28"},{"size":1532,"mtime":1612815368523,"results":"48","hashOfConfig":"28"},{"size":1334,"mtime":1613430367184,"results":"49","hashOfConfig":"28"},{"size":6716,"mtime":1613759696077,"results":"50","hashOfConfig":"28"},{"size":1895,"mtime":1613517253134,"results":"51","hashOfConfig":"28"},{"size":817,"mtime":1613517749864,"results":"52","hashOfConfig":"28"},{"size":5131,"mtime":1613231005283,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"mka0pr",{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"56"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"56"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"56"},"C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\index.js",[],["122","123"],"C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\App.js",["124","125"],"import React, {useContext} from \"react\";\r\nimport \"./components/All.css\";\r\nimport Register from \"./components/Register\";\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport Intro from \"./components/Intro\";\r\nimport Other from \"./components/Other\";\r\nimport Seek from \"./components/Seek\";\r\nimport How from \"./components/How\";\r\nimport {firebaseAuth} from \"./provider/authProvider\";\r\nimport Login from \"./components/Login\";\r\nimport PrivateRoute from \"./components/PrivateRoute\";\r\nimport Vegetables from \"./components/ingredients/Vegetables\";\r\nimport SingleVege from \"./components/ingredients/SingleVege\";\r\nimport Pasta from \"./components/ingredients/Pasta\";\r\nimport SinglePasta from \"./components/ingredients/SinglePasta\";\r\nimport Various from \"./components/ingredients/Various\";\r\nimport SingleVarious from \"./components/ingredients/SingleVarious\";\r\nimport Recipes from \"./components/ingredients/Recipes\";\r\nimport SingleRecipe from \"./components/ingredients/SingleRecipe\";\r\nimport Groats from \"./components/ingredients/Groats\";\r\nimport SingleGroat from \"./components/ingredients/SingleGroat\";\r\nimport RecipesAll from \"./components/ingredients/RecipesAll\";\r\nimport Sauces from \"./components/ingredients/Sauces\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport \"./components/All.css\";\r\n\r\nconst App = () => {\r\n    const {token} = useContext(firebaseAuth);\r\n\r\n    return (\r\n        <div className='all'>\r\n            <NavBar/>\r\n            <div>\r\n                <Route path=\"/logowanie\" component={Login}/>\r\n                <Route path=\"/rejestracja\" component={Register}/>\r\n\r\n                <Switch>\r\n                    <PrivateRoute exact path=\"/\" component={Intro}/>\r\n                    <PrivateRoute path=\"/inne\" component={Other}/>\r\n                    <PrivateRoute exact path=\"/funkcje/znajdz\" component={Seek}/>\r\n                    <PrivateRoute exact path=\"/funkcje/znajdz/przepisy\" component={RecipesAll}\r\n                    />\r\n                    <PrivateRoute path=\"/funkcje/znajdz/przepisy/:slug/\" component={SingleRecipe}\r\n                    />\r\n                    <PrivateRoute exact path=\"/funkcje/jak\" component={How}/>\r\n                    <PrivateRoute exact path=\"/funkcje/jak/warzywa\" component={Vegetables}\r\n                    />\r\n                    <PrivateRoute path=\"/funkcje/jak/warzywa/:slug\" component={SingleVege}\r\n                    />\r\n                    <PrivateRoute exact path=\"/funkcje/jak/makarony\" component={Pasta}/>\r\n                    <PrivateRoute path=\"/funkcje/jak/makarony/:slug\" component={SinglePasta}\r\n                    />\r\n                    <PrivateRoute exact path=\"/funkcje/jak/inne\" component={Various}/>\r\n                    <PrivateRoute path=\"/funkcje/jak/inne/:slug\" component={SingleVarious}\r\n                    />\r\n                    <PrivateRoute exact path=\"/funkcje/jak/kasze\" component={Groats}/>\r\n                    <PrivateRoute path=\"/funkcje/jak/kasze/:slug\" component={SingleGroat}\r\n                    />\r\n                    <PrivateRoute exact path=\"/funkcje/znajdz/sosy\" component={Sauces}/>\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\components\\Intro.js",[],"C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\components\\Other.js",[],"C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\components\\Seek.js",["126","127","128","129","130"],"import React, {useEffect, useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Link} from \"react-router-dom\";\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {green} from '@material-ui/core/colors';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport './All.css';\r\nimport {getRecipes} from \"../Api\";\r\nimport Recipes from \"./ingredients/Recipes\";\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst GreenCheckbox = withStyles({\r\n    root: {\r\n        color: green[400],\r\n        '&$checked': {\r\n            color: green[600],\r\n        },\r\n    },\r\n    checked: {},\r\n})((props) => <Checkbox color=\"default\" {...props} />);\r\nconst Seek = () => {\r\n    const [state, setState] = useState({\r\n        Jajka: false,\r\n        Ziemniaki: false,\r\n        Brokul: false,\r\n        Cebula: false,\r\n        Czosnek: false,\r\n        Kurczak: false,\r\n        Wolowina: false,\r\n        Wieprzowina: false,\r\n        Mielone: false,\r\n        Papryka: false,\r\n        Marchew: false,\r\n        MakaZiemniaczana: false,\r\n        MakaPszenna: false,\r\n        Twarog: false,\r\n        SerZolty: false,\r\n        SerFeta: false,\r\n        PomidoryZpuszki: false,\r\n        Cukinia: false,\r\n        Kukurydza: false,\r\n        FasolaCzerwona: false,\r\n    });\r\n    const [recipes, setRecipes] = useState([]);\r\n    const [alert, setAlert] = useState(false);\r\n    const [recipesShow, setRecipesShow] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            let result = await getRecipes();\r\n            setRecipes(result);\r\n        }\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        let helpTab = [];\r\n        recipes.forEach(recipe => {\r\n            let count = 0;\r\n            Object.entries(state).map(data => {\r\n                if (data[1] === true) {\r\n                    if (recipe.ingredients.indexOf(data[0]) > -1) {\r\n                        count++;\r\n                    }\r\n                    if (count >= 2 && helpTab.indexOf(recipe) < 0) {\r\n                        helpTab.push(recipe);\r\n                    }\r\n                }\r\n\r\n            })\r\n        })\r\n        if (helpTab.length < 1) {\r\n            setAlert(true)\r\n            setRecipesShow(helpTab)\r\n        } else {\r\n            setAlert(false)\r\n            setRecipesShow(helpTab)\r\n        }\r\n    }\r\n    console.log(recipesShow);\r\n    const handleChange = (event) => {\r\n        setState({...state, [event.target.name]: event.target.checked});\r\n    };\r\n\r\n\r\n    return (\r\n        <Container className=\"cards\" maxWidth={'sm'}>\r\n\r\n            <div className=\"text\">\r\n                <h2> Proszę wybrać składniki, z których zamierzasz stworzyć danie:</h2>\r\n            </div>\r\n\r\n            <FormGroup row>\r\n\r\n                <Card className=\"ingre\">\r\n                    <CardContent>\r\n                        <img className=\"photos\" src=\"https://images.unsplash.com/photo-1542223189-67a03fa0f0bd?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=2104&q=80\" />\r\n                        <Typography className=\"typo\" variant=\"h5\">\r\n                            Warzywa\r\n                        </Typography>\r\n                        <Grid container spacing={2}>\r\n\r\n                            <Grid item xs={6}>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={state.Brokul} onChange={handleChange} name=\"Brokul\"/>}\r\n                                    label=\"Brokuł\"\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6}>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={state.Papryka} onChange={handleChange} name=\"Papryka\"/>}\r\n                                    label=\"Papryka\"\r\n                                />\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={6}>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={state.Czosnek} onChange={handleChange} name=\"Czosnek\"/>}\r\n                                    label=\"Czosnek\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={state.Cebula} onChange={handleChange} name=\"Cebula\"/>}\r\n                                    label=\"Cebula\"\r\n                                />\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                        <Grid container spacing={2}>\r\n\r\n                            <Grid item xs={6}>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={state.PomidoryZpuszki} onChange={handleChange}\r\n                                                       name=\"PomidoryZpuszki\"/>}\r\n                                    label=\"Pomidory z puszki\"\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6}>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={state.Cukinia} onChange={handleChange} name=\"Cukinia\"/>}\r\n                                    label=\"Cukinia\"\r\n                                />\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n                        <Grid container spacing={2}>\r\n\r\n                            <Grid item xs={6}>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={state.Marchew} onChange={handleChange} name=\"Marchew\"/>}\r\n                                    label=\"Marchew\"\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6}>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={state.Ziemniaki} onChange={handleChange} name=\"Ziemniaki\"/>}\r\n                                    label=\"Ziemniaki\"\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={6}>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={state.Kukurydza} onChange={handleChange} name=\"Kukurydza\"/>}\r\n                                    label=\"Kukurydza\"\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6}>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={state.FasolaCzerwona} onChange={handleChange} name=\"FasolaCzerwona\"/>}\r\n                                    label=\"Czerwona fasola\"\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                    </CardContent>\r\n                </Card>\r\n\r\n                <Card className=\"ingre\">\r\n                    <CardContent>\r\n                        <img className=\"photos\" src=\"https://images.unsplash.com/photo-1607623814075-e51df1bdc82f?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80\" />\r\n                        <Typography className=\"typo\" variant=\"h5\" component=\"h2\">\r\n                            Mięso\r\n                        </Typography>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={6}>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={state.Wolowina} onChange={handleChange} name=\"Wolowina\"/>}\r\n                                    label=\"Wołowina\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={state.Wieprzowina} onChange={handleChange} name=\"Wieprzowina\"/>}\r\n                                    label=\"Wieprzowina\"\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={2}>\r\n\r\n                            <Grid item xs={6}>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={state.Kurczak} onChange={handleChange} name=\"Kurczak\"/>}\r\n                                    label=\"Pierś z kurczaka\"\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6}>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={state.Mielone} onChange={handleChange} name=\"Mielone\"/>}\r\n                                    label=\"Mięso mielone\"\r\n                                />\r\n                            </Grid>\r\n\r\n\r\n                        </Grid>\r\n\r\n                    </CardContent>\r\n                </Card>\r\n\r\n\r\n                <Card className=\"ingre\">\r\n                    <CardContent>\r\n                        <img className=\"photos\" src=\"https://images.unsplash.com/photo-1591981131950-2ed961d0490e?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80\" />\r\n                        <Typography className=\"typo\" variant=\"h5\" component=\"h2\">\r\n                            Inne\r\n                        </Typography>\r\n\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={6}>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={state.Jajka} onChange={handleChange} name=\"Jajka\"/>}\r\n                                    label=\"Jajka\"\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6}>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={state.SerZolty} onChange={handleChange} name=\"SerZolty\"/>}\r\n                                    label=\"Ser żółty\"\r\n                                />\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={6}>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={state.MakaPszenna} onChange={handleChange} name=\"MakaPszenna\"/>}\r\n                                    label=\"Mąka pszenna\"\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6}>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={state.MakaZiemniaczana} onChange={handleChange} name=\"MakaZiemniaczana\"/>}\r\n                                    label=\"Mąka ziemniaczana\"\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={6}>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={state.Twarog} onChange={handleChange} name=\"Twarog\"/>}\r\n                                    label=\"Twaróg\"\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6}>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={state.SerFeta} onChange={handleChange} name=\"SerFeta\"/>}\r\n                                    label=\"Ser feta\"\r\n                                />\r\n                            </Grid>\r\n\r\n\r\n\r\n                        </Grid>\r\n\r\n                    </CardContent>\r\n                </Card>\r\n            </FormGroup>\r\n\r\n            {recipesShow &&\r\n            <Recipes recipes={recipesShow}/>}\r\n            {alert && window.alert('Za mało składników')}\r\n\r\n            <div className=\"buttons\">\r\n                <Button variant=\"contained\" onClick={handleClick} color=\"primary\">\r\n                    Wyszukaj przepisy\r\n                </Button>\r\n            </div>\r\n\r\n            <div className=\"buttons\">\r\n                <Link to='/funkcje/znajdz/sosy'> <Button variant=\"contained\" color=\"primary\">\r\n                    Sosy, ktore czesto wystepuja jako baza w przepisach</Button></Link>\r\n            </div>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Seek","C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\components\\How.js",["131","132","133","134"],"import React from \"react\";\r\nimport {Link,} from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport './All.css';\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\n\r\nconst How = () => {\r\n    return (\r\n        <>\r\n            <div className='text'>\r\n                <h1> Co zamierzasz ugotować? </h1>\r\n            </div>\r\n            <div className=\"how\">\r\n                <Grid className=\"how\" container spacing={4}>\r\n                    <Grid item xs={2}>\r\n                        <a href=\"/funkcje/jak/warzywa\">\r\n                            <img className='photo'\r\n                                 src=\"https://images.unsplash.com/photo-1557844352-761f2565b576?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MXx8dmVnZXRhYmxlc3xlbnwwfHwwfA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=700&q=60\"/></a>\r\n                        <Link to=\"/funkcje/jak/warzywa\"> <Button variant=\"success\">Warzywa</Button></Link>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        <a href=\"/funkcje/jak/makarony\">\r\n                            <img className='photo'\r\n                                 src=\"https://images.unsplash.com/photo-1612966874574-e0a92ad2bc43?ixid=MXwxMjA3fDB8MHxzZWFyY2h8NTd8fHBhc3RhfGVufDB8fDB8&ixlib=rb-1.2.1&auto=format&fit=crop&w=700&q=60\"/></a>\r\n                        <Link to=\"/funkcje/jak/makarony\"> <Button variant=\"success\">Makarony</Button></Link>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        <a href=\"/funkcje/jak/kasze\">\r\n                            <img className='photo'\r\n                                 src=\"https://images.unsplash.com/photo-1437252611977-07f74518abd7?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MTN8fGJhcmxleSUyMGZvb2R8ZW58MHx8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=700&q=60\"/></a>\r\n                        <Link to=\"/funkcje/jak/kasze\"> <Button variant=\"success\">Kasze</Button></Link>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        <a href=\"/funkcje/jak/inne\">\r\n                            <img className='photo'\r\n                                 src=\"https://images.unsplash.com/photo-1504283165217-3679a64511fd?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MTN8fGVnZ3N8ZW58MHx8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=700&q=60\"/></a>\r\n                        <Link to=\"/funkcje/jak/inne\"> <Button variant=\"success\">Inne</Button></Link>\r\n                    </Grid>\r\n                </Grid>\r\n                </div>\r\n        </>\r\n\r\n\r\n    )\r\n}\r\nexport default How;","C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\Api.js",[],"C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\components\\Register.js",[],"C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\provider\\authProvider.js",["135"],"import React, {useState, useEffect} from \"react\";\r\nimport {authMethods} from \"../firebase/authMethods\";\r\n\r\n\r\nexport const firebaseAuth = React.createContext();\r\n\r\nconst AuthProvider = (props) => {\r\n    const initState = {email: \"\", password: \"\"};\r\n    const [inputs, setInputs] = useState(initState);\r\n    const [errors, setErrors] = useState([]);\r\n    const [token, setToken] = useState(null);\r\n\r\n    const handleSingUp = () => {\r\n        console.log(\"handleSingUp\");\r\n        console.log(inputs);\r\n        authMethods.singup(inputs.email, inputs.password, setToken, setErrors);\r\n        console.log(errors, token)\r\n    }\r\n\r\n    const handleSingIn = () => {\r\n        console.log(\"handleSingIn\");\r\n        console.log(inputs);\r\n        authMethods.singin(inputs.email, inputs.password, setToken, setErrors);\r\n        console.log(errors, token)\r\n    }\r\n\r\n    return (\r\n        <firebaseAuth.Provider\r\n            value={{\r\n                test: \"context is working\",\r\n                handleSingUp,\r\n                handleSingIn,\r\n                inputs,\r\n                setInputs\r\n            }}>\r\n            {props.children}\r\n        </firebaseAuth.Provider>\r\n    )\r\n}\r\nexport default AuthProvider;","C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\firebase\\authMethods.js",["136"],"import firebase from \"firebase\";\r\nimport firebaseConfig from \"./firebaseIndex\";\r\n\r\nexport const authMethods = {\r\n    singin: (email, password, setToken, setErrors) => {\r\n        firebase\r\n            .auth()\r\n            .signInWithEmailAndPassword(email, password)\r\n            .then(async (res) => {\r\n                const token = await Object.entries(res.user)[5][1].b;\r\n                await localStorage.setItem(\"token\", token);\r\n                setToken(token);\r\n                window.location.replace('http://localhost:3000/funkcje/znajdz')\r\n            })\r\n            .catch((e) => setErrors(e));\r\n    },\r\n    singout: (email, password) => {},\r\n    singup: (email, password, setToken, setErrors) => {\r\n        firebase\r\n            .auth()\r\n            .createUserWithEmailAndPassword(email, password)\r\n            .then(async (res) => {\r\n                const token = await Object.entries(res.user)[5][1].b;\r\n                await localStorage.setItem(\"token\", token);\r\n                setToken(token);\r\n                window.location.replace('http://localhost:3000/logowanie')\r\n            })\r\n            .catch((e) => setErrors(e));\r\n    },\r\n};\r\n","C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\firebase\\firebaseIndex.js",["137"],"import firebase from 'firebase'\r\nimport 'firebase/auth'\r\nimport 'firebase/app'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBtwnJGffDi1J-YBrPWlU0aMjknVQpIVuc\",\r\n    authDomain: \"pomocnik-cc6da.firebaseapp.com\",\r\n    projectId: \"pomocnik-cc6da\",\r\n    storageBucket: \"pomocnik-cc6da.appspot.com\",\r\n    messagingSenderId: \"379679255811\",\r\n    appId: \"1:379679255811:web:530dc719262d7e7f8d8d36\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.auth();\r\n\r\nexport default {\r\n    firebaseConfig,\r\n};","C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\components\\Login.js",["138","139"],"import React, { useContext, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { firebaseAuth } from \"../provider/authProvider\";\r\nimport { Button, Container, Grid } from \"@material-ui/core\";\r\nimport { Card } from \"@material-ui/core\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        \"& .MuiTextField-root\": {\r\n            margin: theme.spacing(1),\r\n            width: 200,\r\n        },\r\n    },\r\n}));\r\n\r\nconst Login = () => {\r\n    const classes = useStyles();\r\n    const { handleSingIn, inputs, setInputs } = useContext(firebaseAuth);\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [redirectHome, setRedirectHome] = useState(false);\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setInputs((prev) => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        handleSingIn();\r\n    };\r\n    const handleRedirect = () => {\r\n        console.log(\"Zalogowano\");\r\n        setRedirect(true);\r\n    };\r\n\r\n    return (\r\n        <Container className='cards' maxWidth=\"sm\" >\r\n            <Card className=\"list\">\r\n                <form className={classes.root} noValidate autoComplete=\"off\">\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                onChange={handleChange}\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                value={inputs.password}\r\n                                id=\"standard-error\"\r\n                                label=\"Hasło:\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                value={inputs.email}\r\n                                onChange={handleChange}\r\n                                name=\"email\"\r\n                                type=\"email\"\r\n                                id=\"standard-error\"\r\n                                label=\"Adres e-mail:\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid container style={{marginBottom:20}}>\r\n                            <Grid item xs={3}></Grid>\r\n                            <Grid item xs={3}>\r\n                                <Button onClick={handleSubmit} variant=\"contained\">\r\n                                    Zaloguj\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Button onClick={handleRedirect} variant=\"contained\">\r\n                                    Zarejestruj\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item xs={3}></Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </Card>\r\n            {redirect && <Redirect to=\"/rejestracja\" />}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\components\\PrivateRoute.js",[],"C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\components\\ingredients\\SingleVege.js",["140","141"],"C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\components\\ingredients\\SinglePasta.js",["142","143"],"import React, {useEffect, useState} from 'react';\r\nimport {getPasta} from \"../../Api\";\r\nimport \"../All.css\";\r\nimport Container from '@material-ui/core/Container';\r\nimport Card from '@material-ui/core/Card';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport How from \"../How\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n}));\r\n\r\nconst SinglePasta = (props) => {\r\n\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const classes = useStyles();\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    const [pasta, setPasta] = useState([]);\r\n    let slug = parseInt(props.match.params.slug);\r\n\r\n    useEffect(async () => {\r\n        let result = await getPasta();\r\n        setPasta(result);\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            {pasta.filter(pasta => pasta.number === slug).map(pasta => {\r\n                return (\r\n                    <>\r\n                        <How/>\r\n                        <Container maxWidth={'sm'}>\r\n                            <Card className='description'>\r\n                                <div>\r\n                                    <h1>{pasta.name}</h1>\r\n                                    <img width=\"400px\" src={pasta.image}/>\r\n                                    <h6 className=\"h6\">Sposób przygotowania:</h6>\r\n                                    <div className=\"single\">\r\n                                        {pasta.description}\r\n                                    </div>\r\n                                    <IconButton\r\n                                        className={clsx(classes.expand, {\r\n                                            [classes.expandOpen]: expanded,\r\n                                        })}\r\n                                        onClick={handleExpandClick}\r\n                                        aria-expanded={expanded}\r\n                                        aria-label=\"show more\"\r\n                                    >\r\n                                        <ExpandMoreIcon/>\r\n                                    </IconButton>\r\n\r\n                                    <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                                        <CardContent>\r\n                                            <h6>Wskazówki:</h6>\r\n                                            <Typography paragraph>\r\n                                                {pasta.values}\r\n                                            </Typography>\r\n                                            <Typography paragraph>\r\n                                                <ul className=\"tips\">\r\n                                                    <li>nie dodawaj oliwy do wody!</li>\r\n                                                    <li>makaron wrzucaj jedynie do wrzącej wody!</li>\r\n                                                    <li>sól dorzuć dopiero wówczas, kiedy woda zacznie wrzeć!</li>\r\n                                                    <li>nie gotuj makaronu na wolnym ogniu!</li>\r\n                                                    <li>nie łam suchego makaronu w krótsze nitki!</li>\r\n                                                    <li>aby dowiedzieć się, czy makaron się ugotował po prostu go ugryź\r\n                                                        i sprawdź!\r\n                                                    </li>\r\n                                                    <li>nie przepłukuj makaronu zimną wodą!</li>\r\n                                                    <li>nie zwlekaj z podawaniem!</li>\r\n                                                </ul>\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                    </Collapse>\r\n                                </div>\r\n                            </Card>\r\n                        </Container>\r\n                    </>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SinglePasta;","C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\components\\ingredients\\Vegetables.js",[],"C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\components\\ingredients\\Pasta.js",["144"],"import React, {useEffect, useState} from \"react\";\r\nimport {getPasta} from \"../../Api\";\r\nimport {Link} from \"react-router-dom\";\r\nimport How from \"../How\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport {Card} from \"@material-ui/core\";\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nconst Pasta = () => {\r\n    const [pasta, setPasta] = useState([]);\r\n\r\n    useEffect(async () => {\r\n        let result = await getPasta();\r\n        setPasta(result);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <How/>\r\n            <Container maxWidth={\"sm\"}>\r\n                <Card className=\"list\">\r\n                    <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n                        {pasta.map((data, index) => (\r\n                            <Link key={index} to={\"/funkcje/jak/makarony/\" + data.number}>\r\n                                <ListItem button>\r\n                                    <ListItemText primary={data.name}/>\r\n                                </ListItem>\r\n                            </Link>\r\n                        ))}\r\n                    </List>\r\n                </Card>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Pasta;\r\n","C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\components\\ingredients\\Various.js",["145"],"import React, {useEffect, useState} from \"react\";\r\nimport {getVarious} from '../../Api';\r\nimport {Link} from \"react-router-dom\";\r\nimport How from \"../How\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport {Card} from \"@material-ui/core\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\n\r\n\r\nconst Various = () => {\r\n    const [various, setVarious] = useState([]);\r\n\r\n    useEffect(async () => {\r\n        let result = await getVarious();\r\n        setVarious(result);\r\n    }, [])\r\n\r\n    return (\r\n        <Container maxWidth={'sm'} >\r\n            <How/>\r\n            <Card className=\"list\">\r\n                <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n                    {various.map((data, index) => (\r\n                        <Link key={index} to={\"/funkcje/jak/inne/\" + data.number}>\r\n                            <ListItem button>\r\n                                <ListItemText primary={data.name}/>\r\n                            </ListItem>\r\n                    </Link>\r\n                    ))}\r\n                </List>\r\n            </Card>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Various","C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\components\\ingredients\\SingleVarious.js",["146","147"],"import React, {useEffect, useState} from 'react';\r\nimport {getVarious} from \"../../Api\";\r\nimport \"../All.css\";\r\nimport Container from '@material-ui/core/Container';\r\nimport Card from '@material-ui/core/Card';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport How from \"../How\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n}));\r\n\r\nconst SingleVarious = (props) => {\r\n\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const classes = useStyles();\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    const [various, setVarious] = useState([]);\r\n    let slug = parseInt(props.match.params.slug);\r\n\r\n    useEffect(async () => {\r\n        let result = await getVarious();\r\n        setVarious(result);\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            {various.filter(various => various.number === slug).map(various => {\r\n                return (\r\n                    <>\r\n                        <How/>\r\n                        <Container maxWidth={'sm'}>\r\n                            <Card className='description'>\r\n                                <div>\r\n                                    <h1>{various.name}</h1>\r\n                                    <img width=\"400px\" src={various.image}/>\r\n                                    <h6 className=\"h6\">Sposób przygotowania:</h6>\r\n                                    <div className=\"single\">\r\n                                        {various.description}\r\n                                    </div>\r\n                                    <IconButton\r\n                                        className={clsx(classes.expand, {\r\n                                            [classes.expandOpen]: expanded,\r\n                                        })}\r\n                                        onClick={handleExpandClick}\r\n                                        aria-expanded={expanded}\r\n                                        aria-label=\"show more\"\r\n                                    >\r\n                                        <ExpandMoreIcon/>\r\n                                    </IconButton>\r\n\r\n                                    <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                                        <CardContent>\r\n                                            <h6>Wartości zdrowotne:</h6>\r\n                                            <Typography paragraph>\r\n                                                {various.values}\r\n                                            </Typography>\r\n                                            <Typography paragraph>\r\n                                                {various.values2}\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                    </Collapse>\r\n                                </div>\r\n                            </Card>\r\n                        </Container>\r\n                    </>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SingleVarious;","C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\components\\ingredients\\Recipes.js",[],"C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\components\\ingredients\\SingleRecipe.js",["148"],"import React, {useEffect, useState} from 'react';\r\nimport {getRecipes} from \"../../Api\";\r\nimport \"../All.css\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n\r\nconst SingleRecipe = (props) => {\r\n    const [recipes, setRecipes] = useState([]);\r\n    let slug = parseInt(props.match.params.slug);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            let result = await getRecipes();\r\n            setRecipes(result);\r\n        }\r\n\r\n        fetchData().then();\r\n    }, [])\r\n\r\n    return (\r\n\r\n        <div>\r\n            {recipes.filter(recipe => recipe.number === slug).map(recipe => {\r\n                return (\r\n                    <Container maxWidth={'sm'}>\r\n                        <Card className='description'>\r\n                            <h1>{recipe.name}</h1>\r\n                            <div className=\"single\">\r\n                                <h6>Składniki:</h6>\r\n                                <ul className=\"tips\">\r\n                                    {recipe.composition.map(ingredient => <li key={ingredient}>{ingredient}</li>)}\r\n                                </ul>\r\n                                <h6>Sposób przygotowania:</h6>\r\n                                {recipe.description}\r\n                            </div>\r\n\r\n\r\n                        </Card>\r\n                    </Container>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleRecipe;","C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\components\\ingredients\\Groats.js",[],"C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\components\\ingredients\\SingleGroat.js",["149","150"],"import React, {useEffect, useState} from 'react';\r\nimport {getGroats} from \"../../Api\";\r\nimport \"../All.css\";\r\nimport Container from '@material-ui/core/Container';\r\nimport Card from '@material-ui/core/Card';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport How from \"../How\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n}));\r\n\r\nconst SingleGroat = (props) => {\r\n\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const classes = useStyles();\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    const [groats, setGroats] = useState([]);\r\n    let slug = parseInt(props.match.params.slug);\r\n\r\n    useEffect(async () => {\r\n        let result = await getGroats();\r\n        setGroats(result);\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            {groats.filter(groat => groat.number === slug).map(groat => {\r\n                return (\r\n                    <>\r\n                        <How/>\r\n                        <Container maxWidth={'sm'}>\r\n                            <Card className='description'>\r\n                                <div>\r\n                                    <h1>{groat.name}</h1>\r\n                                    <img width=\"400px\" src={groat.image}/>\r\n                                    <h6 className=\"h6\">Sposób przygotowania:</h6>\r\n                                    <div className=\"single\">\r\n                                        {groat.description}\r\n                                    </div>\r\n                                    <IconButton\r\n                                        className={clsx(classes.expand, {\r\n                                            [classes.expandOpen]: expanded,\r\n                                        })}\r\n                                        onClick={handleExpandClick}\r\n                                        aria-expanded={expanded}\r\n                                        aria-label=\"show more\"\r\n                                    >\r\n                                        <ExpandMoreIcon/>\r\n                                    </IconButton>\r\n\r\n                                    <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                                        <CardContent>\r\n                                            <h6>Wartości zdrowotne:</h6>\r\n                                            <Typography paragraph>\r\n                                                Pod względem wartości odżywczej kasze przewyższają ryż, makaron i\r\n                                                ziemniaki. Są bogatym źródłem skrobi, która w organizmie rozkłada się\r\n                                                powoli na glukozę - paliwo potrzebne do pracy mózgu i wszystkich innych\r\n                                                komórek. 100 g ugotowanej kaszy manny pokrywa niemal całkowicie dzienne\r\n                                                zapotrzebowanie na węglowodany.\r\n                                            </Typography>\r\n\r\n                                            <Typography paragraph>\r\n                                                W skład kasz wchodzą witaminy z grupy B: B1 (tiamina), B2 (ryboflawina),\r\n                                                PP (niacyna), B6 (pirydoksyna), kwas foliowy i witamina E. Sporo jest\r\n                                                również składników mineralnych, głównie potasu obniżającego ciśnienie,\r\n                                                żelaza zapobiegającego niedokrwistości oraz magnezu korzystnie\r\n                                                działającego na układ nerwowy i pracę mięśni (w tym sercowego). Kasze są\r\n                                                też całkiem dobrym źródłem wapnia, miedzi, cynku, manganu i krzemu.\r\n                                            </Typography>\r\n\r\n                                            <h6>Kaszę powinni jeść:</h6>\r\n                                            <ul className=\"tips\">\r\n                                                <li>nadciśnieniowcy i cierpiący na choroby serca i układu krążenia -\r\n                                                    kasze mają dużo potasu i bardzo mało sodu (o ile w ogóle ich nie\r\n                                                    solimy),\r\n                                                </li>\r\n                                                <li>osoby zagrożone anemią - np. kasza jaglana i gryczana zawierają\r\n                                                    żelazo, kwas foliowy i witaminę E zapobiegające niedokrwistości,\r\n                                                </li>\r\n                                                <li>osoby żyjące w ciągłym napięciu i mające skłonności do depresji -\r\n                                                    zawarte w ziarnach witaminy z grupy B łagodzą objawy stresu,\r\n                                                    wspomagają pracę układu nerwowego, poprawiają pamięć, polepszają\r\n                                                    nastrój,\r\n                                                </li>\r\n                                                <li>diabetycy - kasze zawierają dużo skrobi, która łagodnie podnosi\r\n                                                    poziom glukozy i insuliny we krwi,\r\n                                                </li>\r\n                                                <li>dzieci, kobiety w ciąży i karmiące, osoby starsze, rekonwalescenci -\r\n                                                    kasze gotowane na sypko lub rozklejane są lekko strawne.\r\n                                                </li>\r\n                                            </ul>\r\n\r\n                                        </CardContent>\r\n                                    </Collapse>\r\n\r\n                                </div>\r\n                            </Card>\r\n                        </Container>\r\n                    </>\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default SingleGroat;","C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\components\\ingredients\\RecipesAll.js",["151"],"import React, {useState, useEffect} from \"react\";\r\nimport {getRecipes} from \"../../Api\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Container from '@material-ui/core/Container';\r\nimport {Card} from \"@material-ui/core\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        height: 140,\r\n        width: 100,\r\n    },\r\n    icon: {\r\n        color: \"rgba(255, 255, 255, 0.54)\",\r\n    },\r\n}));\r\n\r\nconst RecipesAll = (props) => {\r\n    const [recipes, setRecipes] = useState([]);\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            let result = await getRecipes();\r\n            setRecipes(result);\r\n        }\r\n\r\n        fetchData().then();\r\n    }, []);\r\n\r\n    return (\r\n        <Container maxWidth=\"sm\">\r\n            <div className='text'>\r\n            <h1 > Lista wszystkich przepisów: </h1>\r\n            </div>\r\n            <Card className=\"list\">\r\n                <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n                    {recipes &&\r\n                    recipes.map((data, index) => {\r\n                            return (\r\n                                <Link key={index} to={\"/funkcje/znajdz/przepisy/\" + data.number}>\r\n                                    <ListItem key={index} button>\r\n                                        <ListItemText primary={data.name}/>\r\n                                    </ListItem>\r\n                                </Link>\r\n                            )\r\n                        }\r\n                    )}\r\n                </List>\r\n            </Card>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default RecipesAll;\r\n","C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\components\\ingredients\\Sauces.js",[],"C:\\Users\\skoru\\Desktop\\pomocnik_kuchenny\\src\\components\\NavBar\\index.jsx",["152","153","154"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport '../All.css';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menu: {\r\n        flexGrow: 5,\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        marginRight: 20,\r\n    },\r\n}));\r\n\r\nconst NavBar = () => {\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [mobileView, setMobileView] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const setResponsive = () => {\r\n            return window.innerWidth < 900\r\n                ? setMobileView(true)\r\n                : setMobileView(false);\r\n        };\r\n        setResponsive();\r\n        window.addEventListener(\"resize\", () => setResponsive());\r\n    }, []);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const displayMobile = () => {\r\n        return (\r\n            <Toolbar className=\"tool\">\r\n                <div className={classes.menu}>\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        className={classes.menuButton}\r\n                        color=\"inherit\"\r\n                        onClick={handleDrawerOpen}\r\n                        aria-label=\"menu\"\r\n                    >\r\n                        <MenuIcon onClick={handleClick} />\r\n                    </IconButton>\r\n                    <Drawer variant=\"persistent\"  anchor=\"top\" open={open}>\r\n                        <Link to=\"/funkcje/znajdz\">\r\n                            <MenuItem  onClick={handleDrawerClose}>Znajdź przepis</MenuItem>\r\n                        </Link>\r\n                        <Link to=\"/funkcje/jak\">\r\n                            <MenuItem   onClick={handleDrawerClose}>Jak ugotować</MenuItem>\r\n                        </Link>\r\n                        <Link to=\"/funkcje/znajdz/przepisy\">\r\n                            <MenuItem   onClick={handleDrawerClose}>\r\n                                Wszystkie przepisy\r\n                            </MenuItem>\r\n                        </Link>\r\n                        <Link to=\"/logowanie\">\r\n                            <MenuItem   onClick={handleDrawerClose}>Zaloguj</MenuItem>\r\n                        </Link>\r\n                        <Link to=\"/rejestracja\">\r\n                            <MenuItem   onClick={handleDrawerClose}>Zarejestruj</MenuItem>\r\n                        </Link>\r\n                    </Drawer>\r\n                </div>\r\n            </Toolbar>\r\n        );\r\n    };\r\n\r\n    const displayDesktop = () => {\r\n        return (\r\n            <Toolbar>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    <Link to=\"/funkcje/znajdz\">\r\n                        <Button style={{ color: \"white\" }} variant=\"primary\">\r\n                            Znajdź przepis\r\n                        </Button>\r\n                    </Link>\r\n                </Typography>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    <Link to=\"/funkcje/jak\">\r\n                        <Button style={{ color: \"white\" }} variant=\"primary\">\r\n                            Jak ugotować\r\n                        </Button>\r\n                    </Link>\r\n                </Typography>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    <Link to=\"/funkcje/znajdz/przepisy\">\r\n                        <Button style={{ color: \"white\" }} color=\"primary\">\r\n                            Wszystkie przepisy\r\n                        </Button>\r\n                    </Link>\r\n                </Typography>\r\n\r\n                <Button style={{ color: \"white\" }} component={Link} to=\"/logowanie\">\r\n                    Logowanie\r\n                </Button>\r\n                <Button style={{ color: \"white\" }} component={Link} to=\"/rejestracja\">\r\n                    Rejestracja\r\n                </Button>\r\n            </Toolbar>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                {mobileView ? displayMobile() : displayDesktop()}\r\n            </AppBar>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NavBar;\r\n",{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":18,"column":8,"nodeType":"161","messageId":"162","endLine":18,"endColumn":15},{"ruleId":"159","severity":1,"message":"163","line":28,"column":12,"nodeType":"161","messageId":"162","endLine":28,"endColumn":17},{"ruleId":"159","severity":1,"message":"164","line":18,"column":7,"nodeType":"161","messageId":"162","endLine":18,"endColumn":20},{"ruleId":"165","severity":1,"message":"166","line":68,"column":44,"nodeType":"167","messageId":"168","endLine":68,"endColumn":46},{"ruleId":"169","severity":1,"message":"170","line":105,"column":25,"nodeType":"171","endLine":105,"endColumn":215},{"ruleId":"169","severity":1,"message":"170","line":198,"column":25,"nodeType":"171","endLine":198,"endColumn":218},{"ruleId":"169","severity":1,"message":"170","line":241,"column":25,"nodeType":"171","endLine":241,"endColumn":218},{"ruleId":"169","severity":1,"message":"170","line":18,"column":29,"nodeType":"171","endLine":19,"endColumn":212},{"ruleId":"169","severity":1,"message":"170","line":25,"column":29,"nodeType":"171","endLine":26,"endColumn":203},{"ruleId":"169","severity":1,"message":"170","line":32,"column":29,"nodeType":"171","endLine":33,"endColumn":217},{"ruleId":"169","severity":1,"message":"170","line":39,"column":29,"nodeType":"171","endLine":40,"endColumn":205},{"ruleId":"159","severity":1,"message":"172","line":1,"column":26,"nodeType":"161","messageId":"162","endLine":1,"endColumn":35},{"ruleId":"159","severity":1,"message":"173","line":2,"column":8,"nodeType":"161","messageId":"162","endLine":2,"endColumn":22},{"ruleId":"174","severity":1,"message":"175","line":17,"column":1,"nodeType":"176","endLine":19,"endColumn":3},{"ruleId":"159","severity":1,"message":"177","line":23,"column":12,"nodeType":"161","messageId":"162","endLine":23,"endColumn":24},{"ruleId":"159","severity":1,"message":"178","line":23,"column":26,"nodeType":"161","messageId":"162","endLine":23,"endColumn":41},{"ruleId":"179","severity":1,"message":"180","line":40,"column":15,"nodeType":"167","endLine":43,"endColumn":6},{"ruleId":"169","severity":1,"message":"170","line":56,"column":33,"nodeType":"171","endLine":56,"endColumn":70},{"ruleId":"179","severity":1,"message":"180","line":40,"column":15,"nodeType":"167","endLine":43,"endColumn":6},{"ruleId":"169","severity":1,"message":"170","line":55,"column":37,"nodeType":"171","endLine":55,"endColumn":75},{"ruleId":"179","severity":1,"message":"180","line":14,"column":15,"nodeType":"167","endLine":17,"endColumn":6},{"ruleId":"179","severity":1,"message":"180","line":15,"column":15,"nodeType":"167","endLine":18,"endColumn":6},{"ruleId":"179","severity":1,"message":"180","line":40,"column":15,"nodeType":"167","endLine":43,"endColumn":6},{"ruleId":"169","severity":1,"message":"170","line":55,"column":37,"nodeType":"171","endLine":55,"endColumn":77},{"ruleId":"159","severity":1,"message":"181","line":6,"column":8,"nodeType":"161","messageId":"162","endLine":6,"endColumn":18},{"ruleId":"179","severity":1,"message":"180","line":40,"column":15,"nodeType":"167","endLine":43,"endColumn":6},{"ruleId":"169","severity":1,"message":"170","line":55,"column":37,"nodeType":"171","endLine":55,"endColumn":75},{"ruleId":"159","severity":1,"message":"182","line":26,"column":11,"nodeType":"161","messageId":"162","endLine":26,"endColumn":18},{"ruleId":"159","severity":1,"message":"183","line":9,"column":8,"nodeType":"161","messageId":"162","endLine":9,"endColumn":12},{"ruleId":"159","severity":1,"message":"184","line":36,"column":12,"nodeType":"161","messageId":"162","endLine":36,"endColumn":20},{"ruleId":"159","severity":1,"message":"185","line":54,"column":11,"nodeType":"161","messageId":"162","endLine":54,"endColumn":22},"no-native-reassign",["186"],"no-negated-in-lhs",["187"],"no-unused-vars","'Recipes' is defined but never used.","Identifier","unusedVar","'token' is assigned a value but never used.","'GreenCheckbox' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'firebaseConfig' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'redirectHome' is assigned a value but never used.","'setRedirectHome' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","'Typography' is defined but never used.","'classes' is assigned a value but never used.","'Menu' is defined but never used.","'anchorEl' is assigned a value but never used.","'handleClose' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]